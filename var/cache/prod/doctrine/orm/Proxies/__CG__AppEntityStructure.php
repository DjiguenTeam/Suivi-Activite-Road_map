<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Structure extends \App\Entity\Structure implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'libelle', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'service', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'departement', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'bu', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'pole', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'typeStructure', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'direction', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'isDeleted', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'parent'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'libelle', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'service', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'departement', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'bu', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'pole', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'typeStructure', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'direction', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'isDeleted', '' . "\0" . 'App\\Entity\\Structure' . "\0" . 'parent'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Structure $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLibelle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLibelle', []);

        return parent::getLibelle();
    }

    /**
     * {@inheritDoc}
     */
    public function setLibelle(string $libelle): \App\Entity\Structure
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLibelle', [$libelle]);

        return parent::setLibelle($libelle);
    }

    /**
     * {@inheritDoc}
     */
    public function getService(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getService', []);

        return parent::getService();
    }

    /**
     * {@inheritDoc}
     */
    public function setService(?string $service): \App\Entity\Structure
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setService', [$service]);

        return parent::setService($service);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartement(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartement', []);

        return parent::getDepartement();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartement(?string $departement): \App\Entity\Structure
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartement', [$departement]);

        return parent::setDepartement($departement);
    }

    /**
     * {@inheritDoc}
     */
    public function getBu(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBu', []);

        return parent::getBu();
    }

    /**
     * {@inheritDoc}
     */
    public function setBu(?string $bu): \App\Entity\Structure
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBu', [$bu]);

        return parent::setBu($bu);
    }

    /**
     * {@inheritDoc}
     */
    public function getPole(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPole', []);

        return parent::getPole();
    }

    /**
     * {@inheritDoc}
     */
    public function setPole(?string $pole): \App\Entity\Structure
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPole', [$pole]);

        return parent::setPole($pole);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeStructure(): ?\App\Entity\TypeStructure
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeStructure', []);

        return parent::getTypeStructure();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeStructure(?\App\Entity\TypeStructure $typeStructure): \App\Entity\Structure
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeStructure', [$typeStructure]);

        return parent::setTypeStructure($typeStructure);
    }

    /**
     * {@inheritDoc}
     */
    public function getDirection(): ?\App\Entity\Direction
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDirection', []);

        return parent::getDirection();
    }

    /**
     * {@inheritDoc}
     */
    public function setDirection(?\App\Entity\Direction $direction): \App\Entity\Structure
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDirection', [$direction]);

        return parent::setDirection($direction);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDeleted(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDeleted', []);

        return parent::getIsDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDeleted(?bool $isDeleted): \App\Entity\Structure
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDeleted', [$isDeleted]);

        return parent::setIsDeleted($isDeleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent(): ?\App\Entity\Structure
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(?\App\Entity\Structure $parent): \App\Entity\Structure
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$parent]);

        return parent::setParent($parent);
    }

}
